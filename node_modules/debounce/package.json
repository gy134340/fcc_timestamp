{
  "_args": [
    [
      {
        "raw": "debounce@^1.0.0",
        "scope": null,
        "escapedName": "debounce",
        "name": "debounce",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Applications/MAMP/htdocs/fcc_timestamp/node_modules/filewatcher"
    ]
  ],
  "_from": "debounce@>=1.0.0 <2.0.0",
  "_id": "debounce@1.0.2",
  "_inCache": true,
  "_location": "/debounce",
  "_nodeVersion": "7.8.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/debounce-1.0.2.tgz_1492793694896_0.8119447159115225"
  },
  "_npmUser": {
    "name": "tootallnate",
    "email": "nathan@tootallnate.net"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "debounce@^1.0.0",
    "scope": null,
    "escapedName": "debounce",
    "name": "debounce",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/filewatcher"
  ],
  "_resolved": "https://registry.npmjs.org/debounce/-/debounce-1.0.2.tgz",
  "_shasum": "503cc674d8d7f737099664fb75ddbd36b9626dc6",
  "_shrinkwrap": null,
  "_spec": "debounce@^1.0.0",
  "_where": "/Applications/MAMP/htdocs/fcc_timestamp/node_modules/filewatcher",
  "bugs": {
    "url": "https://github.com/component/debounce/issues"
  },
  "component": {
    "scripts": {
      "debounce/index.js": "index.js"
    }
  },
  "dependencies": {},
  "description": "Creates and returns a new debounced version of the passed function that will postpone its execution until after wait milliseconds have elapsed since the last time it was invoked",
  "devDependencies": {
    "minijasminenode": "^1.1.1",
    "mocha": "*",
    "should": "*",
    "sinon": "^1.17.7"
  },
  "directories": {},
  "dist": {
    "shasum": "503cc674d8d7f737099664fb75ddbd36b9626dc6",
    "tarball": "https://registry.npmjs.org/debounce/-/debounce-1.0.2.tgz"
  },
  "gitHead": "359b502dad1e4f56c50086371d3b8faa0d5862b2",
  "homepage": "https://github.com/component/debounce#readme",
  "keywords": [
    "function",
    "throttle",
    "invoke"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mattmueller",
      "email": "mattmuelle@gmail.com"
    },
    {
      "name": "jongleberry",
      "email": "jonathanrichardong@gmail.com"
    },
    {
      "name": "tootallnate",
      "email": "nathan@tootallnate.net"
    },
    {
      "name": "clintwood",
      "email": "clint@anotherway.co.za"
    },
    {
      "name": "thehydroimpulse",
      "email": "dnfagnan@gmail.com"
    },
    {
      "name": "tjholowaychuk",
      "email": "tj@vision-media.ca"
    },
    {
      "name": "rauchg",
      "email": "rauchg@gmail.com"
    },
    {
      "name": "retrofox",
      "email": "rdsuarez@gmail.com"
    },
    {
      "name": "coreh",
      "email": "thecoreh@gmail.com"
    },
    {
      "name": "forbeslindesay",
      "email": "forbes@lindesay.co.uk"
    },
    {
      "name": "kelonye",
      "email": "kelonyemitchel@gmail.com"
    },
    {
      "name": "yields",
      "email": "yields@icloud.com"
    },
    {
      "name": "anthonyshort",
      "email": "antshort@gmail.com"
    },
    {
      "name": "ianstormtaylor",
      "email": "ian@ianstormtaylor.com"
    },
    {
      "name": "cristiandouce",
      "email": "cristian@gravityonmars.com"
    },
    {
      "name": "swatinem",
      "email": "arpad.borsos@googlemail.com"
    },
    {
      "name": "timaschew",
      "email": "timaschew@gmail.com"
    },
    {
      "name": "stephenmathieson",
      "email": "me@stephenmathieson.com"
    },
    {
      "name": "trevorgerhardt",
      "email": "trevorgerhardt@gmail.com"
    },
    {
      "name": "stagas",
      "email": "gstagas@gmail.com"
    },
    {
      "name": "amasad",
      "email": "amjad.masad@gmail.com"
    },
    {
      "name": "juliangruber",
      "email": "julian@juliangruber.com"
    },
    {
      "name": "calvinfo",
      "email": "calvin@calv.info"
    },
    {
      "name": "dominicbarnes",
      "email": "dominic@dbarnes.info"
    },
    {
      "name": "timoxley",
      "email": "secoif@gmail.com"
    },
    {
      "name": "dfcreative",
      "email": "df.creative@gmail.com"
    },
    {
      "name": "defunctzombie",
      "email": "shtylman@gmail.com"
    }
  ],
  "name": "debounce",
  "optionalDependencies": {},
  "readme": "\n# debounce\n\n  Useful for implementing behavior that should only happen after a repeated action has completed.\n\n## Installation\n\n    $ component install component/debounce\n\n  Or in node:\n\n    $ npm install debounce\n\n## Example\n\n```js\nvar debounce = require('debounce');\nwindow.onresize = debounce(resize, 200);\n\nfunction resize(e) {\n  console.log('height', window.innerHeight);\n  console.log('width', window.innerWidth);\n}\n```\n\nTo later clear the timer and cancel currently scheduled executions:\n```\nwindow.onresize.clear();\n```\n\n## API\n\n### debounce(fn, wait, [ immediate || false ])\n\n  Creates and returns a new debounced version of the passed function that will postpone its execution until after wait milliseconds have elapsed since the last time it was invoked.\n\n  Pass `true` for the `immediate` parameter to cause debounce to trigger the function on the leading edge instead of the trailing edge of the wait interval. Useful in circumstances like preventing accidental double-clicks on a \"submit\" button from firing a second time.\n\n  The debounced function returned also has a property 'clear' that is a function that will clear any scheduled future executions of your function.\n\n## License\n\n  MIT\n\n  Original implementation is from [`underscore.js`](http://underscorejs.org/)\n  which also has an MIT license.\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/component/debounce.git"
  },
  "scripts": {
    "test": "minijasminenode test.js"
  },
  "version": "1.0.2"
}
